=head1 NAME

Hub::Apache2::Handler - Apache2 mod_perl response handler base class


=head1 SYNOPSIS


  sub handler {
  }

  sub process_request {
    my $r = shift;
    ...
    return Apach2::Const::OK;
  }



=head1 DESCRIPTION


B<The working directory of the web site must be set.> We will change to and run
in this directory.  This is also the reflected directory which limits the
request's scope.

This base class parses the request's headers, cgi parameters, and initiales
the user's session (if it can).

=pod:Environment variables

=head2 WORKING_DIR

The working directory is just that.  Since multiple threads (hence multiple
sites) share this interpreter, a change to this directy is issued on each
request.

      PerlSetEnv WORKING_DIR "/var/www/html"

=head2 CONF_FILE

By default configuration is read from a file named C<.conf> in your working
directory.  To use a different one, specify it here.  It must reside beneath
your working directory, and this path is relative to the working directory.
For example:

      PerlSetEnv CONF_FILE "/conf/custom.conf"

would resolve to:

      $WORKING_DIR/conf/custom.conf

=head2 DEBUG

To generate debug messages (written to stderr), set this to a true value.

      # Basic debugging
      PerlSetEnv DEBUG 1

      # More debugging info (includes stack traces)
      PerlSetEnv DEBUG 2



=head1 PUBLIC METHODS

=head2 handle_apache_request

=over 4

=item Apache2 mod_perl invokation wrapper




=back

=head2 response_handler_callback

=over 4

=item Environment wrapper for response handlers


 Usage: response_handler_callback \&subroutine, $r


=back


=head1 INTERNAL METHODS

=head2 _handle_request

=over 4

=item Worker method




=back

=head2 _sigwarn

=over 4

=item Warning handler




=back

=head2 _sigdie

=over 4

=item Die handler (fatals to browser)




=back


=head1 AUTHOR

Ryan Gies (ryangies@livesite.net)


=head1 COPYRIGHT

Copyright (C) 2006-2007 by Livesite Networks, LLC. All rights reserved.

Copyright (C) 2000-2005 by Ryan Gies. All rights reserved.


Redistribution and use in source and binary forms, with or without 
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, 
this list of conditions and the following disclaimer.

* The origin of this software must not be misrepresented; you must not 
claim that you wrote the original software. If you use this software in a 
product, an acknowledgment in the product documentation would be 
appreciated but is not required.

* Altered source versions must be plainly marked as such, and must not be 
misrepresented as being the original software.

* The name of the author may not be used to endorse or promote products 
derived from this software without specific prior written permission.


THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED 
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO 
EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT 
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
OF SUCH DAMAGE.

To the best of our knowledge, no patented algorithms have been used. However, we
do not have the resources to carry out a patent search, and therefore cannot 
give any guarantee of the above statement.


=head1 UPDATED

08/02/2007

=cut
